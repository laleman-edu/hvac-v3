rules_version = '2';
service cloud.firestore {
  // Change note: Enforced authenticated access model aligned with MVP security requirements.
  match /databases/{database}/documents {
    // Change note: Deny all reads and writes by default for defense in depth.
    match /{document=**} {
      allow read, write: if false;
    }

    // Change note: Allow customers to interact only with their own profile documents.
    match /customers/{customerId} {
      allow read, write: if request.auth != null && request.auth.uid == customerId;
    }

    // Change note: Grant authenticated users appointment CRUD to enable scheduling workflows.
    match /appointments/{appointmentId} {
      allow read, write: if request.auth != null;
    }

    // Change note: Restrict invoice/payment writes to admin users, but keep authenticated reads.
    match /invoices/{invoiceId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // Change note: Restrict payment writes to admins for financial integrity.
    match /payments/{paymentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // Change note: Allow public read access for service catalog while protecting writes.
    match /servicetypes/{serviceId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
